# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

# Define a function to require node scripts
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Load react-native script
node_require('react-native/scripts/react_native_pods.rb')

# Also include the react-native-permissions setup script
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Use modular headers for Swift pods, but keep options to disable modules for problematic pods
use_modular_headers!

# Setup only microphone permission
setup_permissions([
  'Microphone'
  # Removed App Tracking Transparency
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'muzic' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Firebase dependencies with selective modular header settings
  pod 'Firebase'
  pod 'FirebaseCore'
  pod 'FirebaseAnalytics'
  pod 'FirebaseCoreInternal'  # Swift pod needs modular headers 
  pod 'GoogleUtilities'

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    
    # Fix for Xcode 15 warning about minimum deployment target
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
        
        # Fix module conflicts by disabling modules for specific pods
        if target.name.include?("React-") || 
           target.name.include?("Firebase") ||
           target.name.include?("GTM") ||
           target.name.include?("Google") ||
           target.name.include?("RNFB")
           
          # Skip disabling modules for Swift-based Firebase pods
          unless target.name.include?("FirebaseCoreInternal") ||
                 target.name.include?("SwiftAudioEx")
            config.build_settings['CLANG_ENABLE_MODULES'] = 'NO'
          end
          
          # Force traditional preprocessor includes
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FB_SONARKIT_ENABLED=1'
        end
      end
    end
  end
end
